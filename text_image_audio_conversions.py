# -*- coding: utf-8 -*-
"""text-image-audio-conversions.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZUoEVi7PRS-xwie4tpus4l0tX-ikdEVg
"""

!pip install gtts

from gtts import gTTS

text="Hello Buddy"

lang="en"

res=gTTS(text=text,lang=lang,slow=False)

res.save('audio.mp3')

!pip install SpeechRecognition

import speech_recognition as sr

model=sr.Recognizer()

!pip install pydub

"""Audio to wav and then to text"""

mp3_file=r'/content/audio.mp3'
from pydub import AudioSegment
from pydub.playback import play
audio=AudioSegment.from_mp3(mp3_file)
audio.export('temp.wav',format="wav")

audio_file=r'/content/temp.wav'
with sr.AudioFile(audio_file) as source:
  audio_data=model.record(source)
  text=model.recognize_google(audio_data)
text

"""Image to text and then to audio"""

!pip install pytesseract pillow

from PIL import Image
import pytesseract
import matplotlib.pyplot as plt

image_path=r'/content/hope2.jpg'

plt.imshow(Image.open(image_path))
plt.axis('off')
plt.show()

!apt-get install tesseract-ocr -y

img=Image.open(image_path)
text=pytesseract.image_to_string(img)
print("Extracted Text:")
print(text)

from gtts import gTTS
import pytesseract
from PIL import Image
import os

# Extract text from image
img = Image.open('/content/hope2.jpg')  # Replace with your image path
text = pytesseract.image_to_string(img)

# Convert text to speech
tts = gTTS(text=text, lang='en')
tts.save("output.mp3")
os.system("start output.mp3")  # For Windows; use "afplay" for Mac or "xdg-open" for Linux

"""Evaluation of an Arithmetic expression in an audio"""

import re

mp3_file=r'/content/arith aud.mp3'
from pydub import AudioSegment
from pydub.playback import play
audio=AudioSegment.from_mp3(mp3_file)
audio.export('arith.wav',format="wav")

r = sr.Recognizer()

with sr.AudioFile('/content/arith.wav') as source:  # Replace with your file name
    audio = r.record(source)

text = r.recognize_google(audio)
print("Recognized Text:", text)

text = text.lower()
text = text.replace('plus', '+')
text = text.replace('minus', '-')
text = text.replace('times', '*')
text = text.replace('multiplied by', '*')
text = text.replace('divided by', '/')

# This regex extracts expressions like 8+4/2 or 5*3-1
expr = re.findall(r'[\d\+\-\*/\.]+(?:\s*[\+\-\*/]\s*[\d\+\-\*/\.]+)*', text)

if expr:
    expression = expr[0].strip()
    print("Extracted Expression:", expression)

    try:
        result = eval(expression)
        print("Result:", result)
    except Exception as e:
        print("Evaluation Error:", e)
else:
    print("No valid expression found.")

